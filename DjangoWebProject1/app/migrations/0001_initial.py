# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-02-01 06:40
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=30, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('categoryid', models.AutoField(db_column='CategoryID', primary_key=True, serialize=False)),
                ('categoryname', models.CharField(db_column='CategoryName', max_length=25, unique=True, verbose_name='Name')),
                ('categorycode', models.CharField(db_column='CategoryCode', max_length=1, unique=True, verbose_name='Code')),
            ],
            options={
                'db_table': 'category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('invoiceid', models.AutoField(db_column='InvoiceID', primary_key=True, serialize=False)),
                ('invoicecode', models.CharField(db_column='InvoiceCode', max_length=20, unique=True)),
                ('invoicedate', models.DateField(db_column='InvoiceDate')),
                ('totalamount', models.IntegerField(db_column='TotalAmount')),
                ('buypricetotal', models.IntegerField(db_column='BuyPriceTotal')),
                ('discount', models.IntegerField(db_column='Discount')),
                ('retailequivalent', models.IntegerField(db_column='RetailEquivalent')),
            ],
            options={
                'db_table': 'invoice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InvoiceNd',
            fields=[
                ('invoiceid', models.AutoField(db_column='InvoiceID', primary_key=True, serialize=False)),
                ('invoicecode', models.CharField(db_column='InvoiceCode', max_length=15, unique=True)),
                ('invoicedate', models.DateField(db_column='InvoiceDate')),
                ('totalamount', models.IntegerField(db_column='TotalAmount')),
                ('buypricetotal', models.IntegerField(db_column='BuyPriceTotal')),
                ('discount', models.IntegerField(db_column='Discount')),
                ('retailequivalent', models.IntegerField(db_column='RetailEquivalent')),
            ],
            options={
                'db_table': 'invoice_nd',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('orderid', models.AutoField(db_column='OrderID', primary_key=True, serialize=False)),
                ('emailaddress', models.CharField(db_column='EmailAddress', max_length=50)),
                ('customername', models.CharField(db_column='CustomerName', max_length=50)),
                ('phonenumber', models.CharField(db_column='PhoneNumber', max_length=20)),
                ('deposit', models.IntegerField(db_column='Deposit')),
            ],
            options={
                'db_table': 'orders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('productid', models.IntegerField(db_column='ProductID', primary_key=True, serialize=False)),
                ('productname', models.CharField(db_column='ProductName', max_length=30)),
                ('reference', models.CharField(db_column='Reference', max_length=5, unique=True)),
                ('picture', models.CharField(db_column='Picture', max_length=30, null=True)),
                ('size', models.CharField(blank=True, db_column='Size', max_length=20, null=True)),
                ('buyingprice', models.IntegerField(db_column='BuyingPrice')),
                ('weight', models.DecimalField(blank=True, db_column='Weight', decimal_places=0, max_digits=10, null=True)),
                ('saleprice', models.IntegerField(db_column='SalePrice')),
                ('salepricenotax', models.IntegerField(db_column='SalePriceNoTax')),
                ('cubicsize', models.DecimalField(blank=True, db_column='CubicSize', decimal_places=0, max_digits=10, null=True)),
                ('active', models.IntegerField(db_column='Active')),
                ('ordered', models.IntegerField(db_column='Ordered')),
            ],
            options={
                'db_table': 'product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductInvoice',
            fields=[
                ('productinvoiceid', models.AutoField(db_column='ProductInvoiceID', primary_key=True, serialize=False)),
                ('quantity', models.IntegerField(db_column='Quantity')),
                ('buyingprice', models.IntegerField(db_column='BuyingPrice')),
                ('saleprice', models.IntegerField(db_column='SalePrice')),
            ],
            options={
                'db_table': 'product_invoice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductInvoiceNd',
            fields=[
                ('productinvoiceid', models.AutoField(db_column='ProductInvoiceID', primary_key=True, serialize=False)),
                ('quantity', models.IntegerField(db_column='Quantity')),
                ('buyingprice', models.IntegerField(db_column='BuyingPrice')),
                ('saleprice', models.IntegerField(db_column='SalePrice')),
            ],
            options={
                'db_table': 'product_invoice_nd',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductOrder',
            fields=[
                ('productorderid', models.AutoField(db_column='ProductOrderID', primary_key=True, serialize=False)),
                ('stock', models.IntegerField(db_column='Stock')),
                ('note', models.CharField(db_column='Note', max_length=1000)),
                ('status', models.IntegerField(db_column='Status')),
                ('readytopick', models.IntegerField(db_column='ReadyToPick')),
                ('pickedup', models.IntegerField(db_column='PickedUp')),
            ],
            options={
                'db_table': 'product_order',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductProforma',
            fields=[
                ('productproformaid', models.AutoField(db_column='ProductProformaID', primary_key=True, serialize=False)),
                ('quantity', models.IntegerField(db_column='Quantity')),
            ],
            options={
                'db_table': 'product_proforma',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Proforma',
            fields=[
                ('proformaid', models.AutoField(db_column='ProformaID', primary_key=True, serialize=False)),
                ('proformacode', models.CharField(db_column='ProformaCode', max_length=15, unique=True)),
                ('proformadate', models.DateField(db_column='ProformaDate')),
                ('totalamount', models.IntegerField(db_column='TotalAmount')),
                ('buypricetotal', models.IntegerField(db_column='BuyPriceTotal')),
                ('discount', models.IntegerField(db_column='Discount')),
            ],
            options={
                'db_table': 'proforma',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('providerid', models.AutoField(db_column='ProviderID', primary_key=True, serialize=False)),
                ('providername', models.CharField(db_column='ProviderName', max_length=30)),
                ('provideraddress', models.CharField(blank=True, db_column='ProviderAddress', max_length=150, null=True)),
                ('providerphonenumber', models.CharField(blank=True, db_column='ProviderPhoneNumber', max_length=20, null=True)),
            ],
            options={
                'db_table': 'provider',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProviderProduct',
            fields=[
                ('providerproductid', models.AutoField(db_column='ProviderProductID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'provider_product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('productstockid', models.AutoField(db_column='ProductStockID', primary_key=True, serialize=False)),
                ('quantity', models.IntegerField(db_column='Quantity')),
            ],
            options={
                'db_table': 'stock',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockLocation',
            fields=[
                ('stocklocationid', models.AutoField(db_column='StockLocationID', primary_key=True, serialize=False)),
                ('sl_code', models.CharField(db_column='SL_Code', max_length=3)),
                ('sl_name', models.CharField(db_column='SL_Name', max_length=30)),
                ('sl_address', models.CharField(db_column='SL_Address', max_length=150)),
                ('sl_sale', models.IntegerField(db_column='SL_Sale')),
                ('invoiceprefix', models.CharField(db_column='InvoicePrefix', max_length=3)),
                ('lastinvoicenumber', models.IntegerField(db_column='LastInvoiceNumber')),
                ('active', models.IntegerField(db_column='Active')),
            ],
            options={
                'db_table': 'stock_location',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Subcategory',
            fields=[
                ('subcategoryid', models.AutoField(db_column='SubCategoryID', primary_key=True, serialize=False)),
                ('subcategoryname', models.CharField(db_column='SubCategoryName', max_length=25, unique=True)),
                ('subcategorycode', models.CharField(db_column='SubCategoryCode', max_length=1, unique=True)),
            ],
            options={
                'db_table': 'subcategory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('headline', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ('headline',),
            },
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
            ],
            options={
                'ordering': ('title',),
            },
        ),
        migrations.AddField(
            model_name='article',
            name='publications',
            field=models.ManyToManyField(to='app.Publication'),
        ),
    ]
